# Frontend Dockerfile
FROM node:20.9.0-alpine as build

WORKDIR /app

# Copy package.json and package-lock.json
COPY frontend/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the frontend code
COPY frontend/ ./

# Set build-time environment variables with default values
ARG VITE_BACKEND_SERVER=http://localhost:8888/
ARG VITE_FILE_BASE_URL=http://localhost:8888/
ARG PROD=true

# Make environment variables available during build
ENV VITE_BACKEND_SERVER=$VITE_BACKEND_SERVER
ENV VITE_FILE_BASE_URL=$VITE_FILE_BASE_URL
ENV PROD=$PROD

# Build the application
RUN npm run build

# Production stage - serve with nginx
FROM nginx:alpine

# Install openssl for nonce generation
RUN apk add --no-cache openssl bash

# Copy built files from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configurations
COPY nginx-base.conf /etc/nginx/nginx.conf
COPY nginx-http-headers.conf /etc/nginx/conf.d/http-headers.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy and set up our entry script
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Expose port 80
EXPOSE 80

# Use our custom entrypoint that will generate nonces and start nginx
ENTRYPOINT ["/docker-entrypoint.sh"]