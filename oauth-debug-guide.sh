#!/bin/bash

echo "üîç OAuth Login Troubleshooting Guide"
echo "====================================="

BASE_URL="${1:-http://localhost:5000}"
FRONTEND_URL="${2:-http://localhost:3000}"

echo ""
echo "üîß Configuration Check:"
echo "Backend URL: $BASE_URL"
echo "Frontend URL: $FRONTEND_URL"

echo ""
echo "üìã Steps to diagnose OAuth login issues:"
echo ""

echo "1. ‚úÖ Check Environment Variables"
echo "   Make sure these are set in your backend .env file:"
echo "   - JWT_SECRET"
echo "   - GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET (for Google OAuth)"
echo "   - FACEBOOK_APP_ID and FACEBOOK_APP_SECRET (for Facebook OAuth)" 
echo "   - FRONTEND_URL (should match: $FRONTEND_URL)"

echo ""
echo "2. üåê Test OAuth Redirect URLs"
echo "   Google OAuth initiate: $BASE_URL/api/auth/google"
echo "   Facebook OAuth initiate: $BASE_URL/api/auth/facebook"
echo "   Expected callback URLs in your OAuth apps:"
echo "   - Google: $BASE_URL/api/auth/google/callback"
echo "   - Facebook: $BASE_URL/api/auth/facebook/callback"

echo ""
echo "3. üîç Debug Authentication Status"
echo "   After getting a token, check status with:"
echo "   curl -H \"Authorization: Bearer YOUR_TOKEN\" $BASE_URL/api/debug/auth-status"

echo ""
echo "4. üìä Check User Sessions"
echo "   curl $BASE_URL/api/debug/sessions/USER_ID"

echo ""
echo "5. üß™ Test Token Refresh (if using enhanced tokens)"
echo "   curl -X POST $BASE_URL/api/auth/refresh \\"
echo "        -H \"Content-Type: application/json\" \\"
echo "        -d '{\"refreshToken\":\"YOUR_REFRESH_TOKEN\"}'"

echo ""
echo "üö® Common Issues and Solutions:"
echo ""
echo "Issue: Logs in then immediately logs out"
echo "   ‚û§ Check if token is being stored correctly in frontend"
echo "   ‚û§ Verify token format matches what auth middleware expects"
echo "   ‚û§ Use debug endpoint to check token status"
echo ""
echo "Issue: OAuth callback fails"
echo "   ‚û§ Verify callback URLs in OAuth app configuration"
echo "   ‚û§ Check FRONTEND_URL environment variable"
echo "   ‚û§ Ensure no CORS issues between frontend and backend"
echo ""
echo "Issue: User creation fails"
echo "   ‚û§ Check MongoDB connection"
echo "   ‚û§ Verify database models are properly registered"
echo "   ‚û§ Check for duplicate email/OAuth ID conflicts"

echo ""
echo "üî¨ Detailed Debug Process:"
echo "1. Start OAuth flow: Visit $BASE_URL/api/auth/google"
echo "2. Complete OAuth on provider (Google/Facebook)"
echo "3. Check callback URL: Should redirect to $FRONTEND_URL/auth/callback?data=..."
echo "4. Extract token from callback data"
echo "5. Test token: curl -H \"Authorization: Bearer TOKEN\" $BASE_URL/api/debug/auth-status"
echo "6. If token is invalid, check the debug response for specific errors"

echo ""
echo "üí° Frontend Integration Checklist:"
echo "‚ñ° Extract token from OAuth callback URL parameter"
echo "‚ñ° Store token in localStorage or secure storage"
echo "‚ñ° Add 'Authorization: Bearer TOKEN' header to API requests"
echo "‚ñ° Handle token expiration and refresh logic"
echo "‚ñ° Redirect to login on authentication failures"

echo ""
echo "üìù Example Frontend Token Extraction:"
echo "// Extract from OAuth callback URL"
echo "const urlParams = new URLSearchParams(window.location.search);"
echo "const data = urlParams.get('data');"
echo "if (data) {"
echo "  const userData = JSON.parse(decodeURIComponent(data));"
echo "  localStorage.setItem('token', userData.token);"  
echo "  // Use userData.token for API requests"
echo "}"

echo ""
echo "To run this diagnostic:"
echo "1. Ensure your backend server is running"
echo "2. Try OAuth login flow"
echo "3. Use the debug endpoints above to identify issues"
echo "4. Check browser console for frontend errors"
echo "5. Check backend logs for server errors"